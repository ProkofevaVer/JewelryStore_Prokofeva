<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - JewelryStore_Prokofeva</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/style.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link rel="stylesheet" href="~/JewelryStore_Prokofeva.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    @* <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script> *@
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <title>Меню с прокруткой</title>

    <style>
        body {
            margin: 0;
            padding: 0;
            height: 2000px;
        }

        header {
            padding: 20px;
            background-image: linear-gradient(to right, #093875, #0e458c, #1251a3, #1d6bd1, #3886eb, #4e93ed, #62a0f0, #79aef2, #8ebbf5, #a2c6f5, #bad4f7);
            display: flex;
            justify-content: center; 
            align-items: center;
            color: white;
            position: fixed;
            width: 100%;
            top: 0;
            transition: top 0.3s;
            z-index: 1000;
        }

        .menu-items {
            display: flex;
            justify-content: center; 
            align-items: center;
            width: 100%; 
        }

        .menu-items a {
            color: white !important;
            text-decoration: none;
            margin: 0 15px; 
        }

        .location-item {
            display: flex; 
            align-items: center;
            margin: 0 15px; 
        }

        .location-item i {
            color: white !important;
            margin-right: 5px; 
        }

        .catalog-btn {
            background: linear-gradient(to left, #1251a3, #1d6bd1, #1251a3, #1d6bd1, #1251a3);
            padding: 10px 20px;
            border-radius: 10px;
            color: white;
            text-decoration: none;
            margin-right: 15px;
            transition: background 0.3s; /* Плавный переход */
        }

         

        .search-bar {
            display: flex; /* Используем flex для центрирования */
            align-items: center; /* Центрируем по вертикали */
        }
        .search-bar input {
            padding: 5px;
            width:350px;
            border-radius: 5px;
            border: none;
            color: black; /* Цвет текста в поле поиска */
        }

        .icon-buttons {
            margin: 0 15px;
            display: flex; /* Используем flex для центрирования */
            gap: 10px; /* Отступ между кнопками */
            justify-content: center;
        }

        .icon-button {
            display: inline-block; /* Позволяет добавлять отступы и размеры */
            width: 40px; /* Ширина кнопки */
            height: 40px; /* Высота кнопки */
            background-color: transparent; /* Фон кнопки */
            border: none; /* Убираем рамку */
            cursor: pointer; /* Указатель при наведении */
            transition: transform 0.2s; /* Плавный переход при наведении */
        }

            .icon-button img {
                max-width: 100%; /* Ограничиваем ширину изображения */
                max-height: 100%; /* Ограничиваем высоту изображения */
            }

            .icon-button:hover {
                transform: scale(1.1); /* Увеличиваем кнопку при наведении */
            }

        

        
        .info {
            position: relative;
            width: 100%;
            height: 800px; /* Высота баннера */
            overflow: hidden;
        }

        .info-item {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            transition: opacity 1s ease;
        }

        .info-item.active {
            opacity: 1;
        }

        .suggestion-item {
            padding: 10px;
            cursor: pointer;
        }

            .suggestion-item:hover {
                background-color: #f0f0f0;
                // Подсветка при наведении
            }

    </style>


</head>

@{
    // Определяем, показывать ли новое меню (если путь содержит /api/Admin или /api/Client)
    var requestPath = Context.Request.Path.Value;
    bool isAdminPath = requestPath.Contains("/api/Admin");
    bool isClientPath = requestPath.Contains("/api/Client");
    Console.WriteLine($"Current Path: {requestPath}, Is Admin Path: {isAdminPath}, Is Client Path: {isClientPath}");
}
<body>
    @if (isAdminPath)
    {
        <!-- Новое меню Админ-->
        <header id="header" style="background-color: #004080; padding: 15px; color: white; position: fixed; width: 100%; top: 0; z-index: 1000; transition: top 0.3s;">
            <nav>
                <div class="new-menu-items" style="display: flex; justify-content: space-between; align-items: center;">
                    <div style="display: flex; gap: 20px; align-items: center;">
                        <a href="@Url.Action("AdminPage", "Admin", new { id = 1 })" style="color: white; font-weight: bold; font-size: 24px; text-decoration: none;">
                            <img src="/Image/Logo.png" style="height: 60px;" />
                        </a>
                        <a href="@Url.Action("ProductList", "Admin")" style="color: white; text-decoration: none;">Список товаров</a>
                        <a href="@Url.Action("ReportSale", "Admin", new { id = 1 })" style="color: white; text-decoration: none;">Продажа</a>
                        <a href="@Url.Action("AddJewelryItem", "Admin", new { id  = 1 })" style="color: white; text-decoration: none;">+ Товар</a>
                        <input type="search" placeholder="Поиск..." style="padding: 5px; border-radius: 4px; border: none;" />
                    </div>

                    <div>
                        <button class="icon-button" type="button" title="Выйти из системы" onclick="logoutAdmin()" style="background: none; border: none; cursor: pointer;">
                            <img src="https://cdn-icons-png.flaticon.com/512/1286/1286853.png" alt="Иконка выхода" style="width: 24px; height: 24px;" />
                        </button>
                    </div>
                </div>
            </nav>
        </header>

        <!-- Старое меню скрыто -->
        <header id="old-header" style="display:none;"></header>
    }
    else if (isClientPath)
    {
        <!-- Новое меню Клиент -->
        <header id="header" style="background-image: linear-gradient(to right, #093875, #0e458c, #1251a3, #1d6bd1, #3886eb, #4e93ed, #62a0f0, #79aef2, #8ebbf5, #a2c6f5, #bad4f7); padding: 20px; color: white; position: fixed; width: 100%; top: 0; z-index: 1000; transition: top 0.3s;">
            <nav>
                <div class="menu-items" style="display: flex; justify-content: center; align-items: center; width: 100%;">
                    <a href="@Url.Action("ClientHomePage", "Client", new { id = ViewData["User Id"] })" style="color: white; margin-right: 15px;">
                        <img src="/Image/Logo.png" style="height: 60px;" />
                    </a>
                    <a class="catalog-btn" href="@Url.Action("ClientCategoryProduct", "Client", new { id = ViewData["User Id"] })" style="background: linear-gradient(to left, #1251a3, #1d6bd1, #1251a3, #1d6bd1,#1251a3 ); padding: 10px 20px; border-radius: 10px; color: white; text-decoration: none; margin-right: 15px;">Каталог</a>
                   
                    <div class="search-bar" style="display: flex; align-items: center; position: relative;">
                        <input type="text" id="searchInput" placeholder="Поиск по каталогу" oninput="searchProducts()" onfocus="showSuggestions()" onblur="hideSuggestions()" />
                        <div id="suggestions" style="color:black; position: absolute; top: 100%; left: 0; right: 0; background: white; border: 1px solid #ccc; display: none; z-index: 1000;">
                            <!-- Результаты поиска будут добавлены здесь -->
                        </div>
                    </div>
               
                </div>
            </nav>
            <div class="icon-buttons" style="margin-top: 10px; display: flex; gap: 10px; justify-content: center;">

                <a href="@Url.Action("ClientBasket", "Client", new { id = ViewData["User Id"] })">Корзина</a>
                <button class="icon-button" type="button"><img src="https://cdn-icons-png.flaticon.com/512/3081/3081822.png" alt="Иконка 2" /></button>
                
                <button class="icon-button" type="button"><img src="https://cdn-icons-png.flaticon.com/512/84/84139.png" alt="Иконка 3" /></button>
                <button class="icon-button" type="button" title="Выйти из системы" onclick="logoutAdmin()" style="background: none; border: none; cursor: pointer;">
                    <img src="https://cdn-icons-png.flaticon.com/512/1286/1286853.png" alt="Иконка выхода" style="width: 24px; height: 24px;" />
                </button>
            </div>
        </header>

        <!-- Старое меню скрыто -->
        <header id="old-header" style="display:none;"></header>
    }
    else
    {
        <!-- Старое меню Гость -->
        <header id="header" style="background-image: linear-gradient(to right, #093875, #0e458c, #1251a3, #1d6bd1, #3886eb, #4e93ed, #62a0f0, #79aef2, #8ebbf5, #a2c6f5, #bad4f7); padding: 20px; color: white; position: fixed; width: 100%; top: 0; z-index: 1000; transition: top 0.3s;">
            <nav>
                <div class="menu-items" style="display: flex; justify-content: center; align-items: center; width: 100%;">
                    <a href="@Url.Action("Index", "Home")" style="color: white; margin-right: 15px;">
                        <img src="/Image/Logo.png" style="height: 60px;" />
                    </a>
                    <a class="catalog-btn" href="@Url.Action("Index", "CategoryProduct")" style="background: linear-gradient(to left, #1251a3, #1d6bd1, #1251a3, #1d6bd1,#1251a3 ); padding: 10px 20px; border-radius: 10px; color: white; text-decoration: none; margin-right: 15px;">Каталог</a>
                 
                    <div class="search-bar" style="display: flex; align-items: center; position: relative;">
                        <input type="text" id="searchInput" placeholder="Поиск по каталогу" oninput="searchProducts()" onfocus="showSuggestions()" onblur="hideSuggestions()" />
                        <div id="suggestions" style="color:black; position: absolute; top: 100%; left: 0; right: 0; background: white; border: 1px solid #ccc; display: none; z-index: 1000;">
                            <!-- Результаты поиска будут добавлены здесь -->
                        </div>
                    </div>
                
                </div>
            </nav>
            <div class="icon-buttons" style="margin-top: 10px; display: flex; gap: 10px; justify-content: center;">
                <button class="icon-button" type="button"><img src="https://cdn-icons-png.flaticon.com/512/3081/3081822.png" alt="Иконка 2" /></button>
                <button class="icon-button" type="button"><img src="https://cdn-icons-png.flaticon.com/512/84/84139.png" alt="Иконка 3" /></button>
                <button class="icon-button" type="button" data-toggle="modal" data-target="#authModal">
                    <img src="https://cdn-icons-png.flaticon.com/512/1286/1286853.png" alt="Иконка входа" />
                </button>
            </div>
        </header>

        <!-- Новое меню скрыто -->
        <header id="new-header" style="display:none;"></header>
    }

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - JewelryStore_Prokofeva - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)




    
    <!-- Модальное окно -->
    <div class="modal fade" id="authModal" tabindex="-1" role="dialog" aria-labelledby="authModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="authModalLabel">Авторизация / Регистрация</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <ul class="nav nav-tabs" id="authTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="login-tab" data-toggle="tab" href="#login" role="tab" aria-controls="login" aria-selected="true">Вход</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="register-tab" data-toggle="tab" href="#register" role="tab" aria-controls="register" aria-selected="false">Регистрация</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="authTabContent">
                        <div class="tab-pane fade show active" id="login" role="tabpanel" aria-labelledby="login-tab">
                            <form id="loginForm" method="post" asp-controller="Account" asp-action="Login">
                                <div class="form-group">
                                    <label for="loginEmail">Email</label>
                                    <input type="email" class="form-control" name="email" id="loginEmail" placeholder="Введите email" required>
                                </div>
                                <div class="form-group">
                                    <label for="loginPassword">Пароль</label>
                                    <input type="password" class="form-control" name="password" id="loginPassword" placeholder="Введите пароль" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Войти</button>
                            </form>
                            @if (!ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger">
                                    @ViewData.ModelState.Values.SelectMany(v => v.Errors).FirstOrDefault()?.ErrorMessage
                                </div>
                            }
                        </div>
                        <div class="tab-pane fade" id="register" role="tabpanel" aria-labelledby="register-tab">
                          

                            <form id="registerForm" method="post" asp-controller="Account" asp-action="Register">
                                <div class="form-group">
                                    <label for="registerEmail">Email</label>
                                    <input type="email" class="form-control" name="Email" id="registerEmail" placeholder="Введите email" required>
                                </div>
                                <div class="form-group">
                                    <label for="registerPassword">Пароль</label>
                                    <input type="password" class="form-control" name="Password" id="registerPassword" placeholder="Введите пароль" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Зарегистрироваться</button>
                            </form>
                            <div id="responseMessage"></div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
                document.getElementById('registerForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Предотвращаем стандартное поведение формы

            const formData = new FormData(this);
            const response = await fetch('/Account/Register', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                const result = await response.json(); // Получаем JSON-ответ от сервера
                document.getElementById('responseMessage').innerHTML = result.message; // Отображаем сообщение об успехе
            } else {
                const error = await response.json(); // Получаем JSON-ответ об ошибке
                document.getElementById('responseMessage').innerHTML = error.message; // Отображаем сообщение об ошибке
            }
        });

    </script>
@*     <script>
                        fetch('/api/account/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`
        })
        .then(response => {
            if (response.ok) {
                window.location.href = '/Admin/AdminPage'; // Перенаправление на страницу администратора
            } else {
                return response.text().then(text => {
                    alert(text); // Вывод сообщения об ошибке
                });
            }
        })
        .catch(error => {
            console.error('Ошибка:', error);
        });


    </script> *@


  @*   1@mail.ru *@




    <script>
        // Скрипт для скрытия/показа шапки при скролле
        let lastScrollTop = 0;
        const header = document.getElementById('header');

        window.addEventListener('scroll', function () {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

            if (scrollTop > lastScrollTop) {
                // Прокрутка вниз — скрываем шапку
                header.style.top = '-80px';
            } else {
                // Прокрутка вверх — показываем шапку
                header.style.top = '0';
            }
            lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // для iOS
        });

        function logoutAdmin() {
            // Здесь можно добавить логику выхода, например, вызов API logout
            // После выхода — редирект на главную страницу
            window.location.href = 'https://localhost:7075/';
        }

           function showSuggestions() {
            const suggestions = document.getElementById('suggestions');
            if (suggestions.innerHTML.trim() !== '') {
                suggestions.style.display = 'block';
            }
        }

        function hideSuggestions() {
            setTimeout(() => {
                document.getElementById('suggestions').style.display = 'none';
            }, 200);
        }

        async function searchProducts() {
            const query = document.getElementById('searchInput').value;
            if (!query) {
                document.getElementById('suggestions').style.display = 'none';
                return;
            }
               // Определите, клиент это или гость
        const isClient = !!document.getElementById('header').getAttribute('data-client'); // Предположим, что у вас есть атрибут data-client в заголовке для клиентов

        const response = await fetch(isClient ? `/Client/Search?title=${encodeURIComponent(query)}` : `/Home/Search?title=${encodeURIComponent(query)}`);
        const html = await response.text();
        const suggestions = document.getElementById('suggestions');
        suggestions.innerHTML = html;
        suggestions.style.display = 'block';
        }
    </script>


    @* var requestPath = Context.Request.Path.Value;
    bool isAdminPath = requestPath.Contains("/api/Admin");
    bool isClientPath = requestPath.Contains("/api/Client"); *@

























@* 
    <script>
         // Скрипт для скрытия/показа шапки при скролле
        let lastScrollTop = 0;
        const header = document.getElementById('header');

        window.addEventListener('scroll', function () {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

            if (scrollTop > lastScrollTop) {
                // Прокрутка вниз — скрываем шапку
                header.style.top = '-80px';
            } else {
                // Прокрутка вверх — показываем шапку
                header.style.top = '0';
            }
            lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // для iOS
        });

         function logoutAdmin() {
            // Здесь можно добавить логику выхода, например, вызов API logout
            // После выхода — редирект на главную страницу
            window.location.href = 'https://localhost:7075/';

        }
    </script>


    <script>
        async function searchProducts() {
            const query = document.getElementById("searchInput").value;
            const suggestionsDiv = document.getElementById("suggestions");

            if (query.length === 0) {
                suggestionsDiv.style.display = "none";
                return;
            }

           const response = await fetch(`/Home/Search?title=${encodeURIComponent(query)}`);
            const html = await response.text();

            suggestionsDiv.innerHTML = html;
            suggestionsDiv.style.display = "block";
        }
    </script>
 *@


    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>




