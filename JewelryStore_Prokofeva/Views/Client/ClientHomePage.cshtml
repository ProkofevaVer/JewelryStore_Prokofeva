@{
    ViewData["Title"] = "Home Page";
}

<h2>Клиент</h2>
<h2>Клиент</h2>

<style>

    body {
        margin: 0; /* Убираем отступы по умолчанию */
        padding: 0; /* Убираем внутренние отступы */
        width: 100%; /* Устанавливаем ширину на 100% */
        overflow-x: hidden; /* Скрываем горизонтальный скролл */
    }

    .container {
        width: 100%; /* Устанавливаем ширину контейнера на 100% */
        max-width: 1200px; /* Ограничиваем максимальную ширину, если это необходимо */
        margin: 0 auto; /* Центрируем контейнер */
        padding: 0 20px; /* Добавляем отступы по бокам */
    }

    .banner-wrapper {
        position: relative;
        width: 100%;
        height: 400px; /* Высота баннера */
        overflow: hidden;
        margin-top: 100px;
    }

    .slider {
        display: flex;
        transition: transform 0.5s ease;
    }

    .banner-item {
        min-width: 100%;
        height: 100%;
        opacity: 0;
        transition: opacity 1s ease;
    }

        .banner-item.active {
            opacity: 1;
        }

        .banner-item img {
            width: 100%; /* Устанавливаем ширину изображения на 100% */
            height: 100%; /* Устанавливаем высоту изображения на 100% */
            object-fit: cover; /* Обеспечиваем правильное отображение изображений */
        }

    .arrow {
        position: absolute;
        top: 30%;
        transform: translateY(-50%);
        background-color: rgba(255, 255, 255, 0.5);
        border: none;
        padding: 10px;
        cursor: pointer;
        z-index: 1;
    }

    .left-arrow {
        left: 10px;
    }

    .right-arrow {
        right: 10px;
    }

    .info {
        position: relative;
        width: 100%;
        height: 800px; /* Высота баннера */
        overflow: hidden;
    }

    .info-item {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        transition: opacity 1s ease;
    }

        .info-item.active {
            opacity: 1;
        }

    .product-container {
        display: flex;
        flex-direction: row; /* Располагаем карточки в строку */
        overflow-x: auto; /* Включаем горизонтальный скролл */
        gap: 20px; /* Отступ между карточками */
        padding: 10px 0; /* Отступ сверху и снизу */
    }

    .product-card {
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 20px;
        min-width: 220px; /* Минимальная ширина карточки */
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
        display: flex;
        flex-direction: column; /* Позволяет карточке растягиваться по высоте */
        justify-content: space-between; /* Распределяет пространство между элементами */
        height: 100%; /* Позволяет карточкам занимать одинаковую высоту */
    }

        .product-card:hover {
            transform: scale(1.05); /* Увеличьте размер при наведении */
        }

    h1 {
        text-align: center; /* Центрируем текст */
        margin-bottom: 20px; /* Отступ снизу для отделения от карточек */
    }

    .product-image {
        width: 100%;
        height: auto;
        border-radius: 5px;
        margin-bottom: 10px; /* Отступ между изображением и текстом */
    }

    .product-title {
        font-size: 18px; /* Увеличьте размер шрифта заголовка */
        margin: 10px 0;
    }

</style>



<div class="banner-wrapper">
    <button class="arrow left-arrow">&#10094;</button>
    <div class="slider">
        <div class="banner-item active">
            <img src="https://miuz.ru/upload/resize_cache/iblock/278/1440_618/nmbuvt9wz86vbl4e0l27ad0mflawm9zv.webp" alt="Изображение 1">
        </div>
        <div class="banner-item">
            <img src="https://miuz.ru/upload/resize_cache/iblock/8ea/1440_618/k00yo01e7o2zre5ci1nk2d1dfnt5fv7g.webp" alt="Изображение 2">
        </div>
        <div class="banner-item">
            <img src="https://miuz.ru/upload/resize_cache/iblock/e1d/1440_618/aas5ebqazna58nm849mt9dqll3x611mt.webp" alt="Изображение 3">
        </div>
        <div class="banner-item">
            <img src="https://rest.adamas.ru/bnr/1920-750-_desktop_oyti.webp" alt="Изображение 4">
        </div>
        <div class="banner-item">
            <img src="https://cdn-icons-png.flaticon.com/512/3081/3081822.png" alt="Изображение 5">
        </div>
        <div class="banner-item">
            <img src="https://miuz.ru/upload/resize_cache/iblock/278/1440_618/nmbuvt9wz86vbl4e0l27ad0mflawm9zv.webp" alt="Изображение 6">
        </div>
    </div>
    <button class="arrow right-arrow">&#10095;</button>
</div>



@{
    var imageUrls = new[]
    {
        "https://cdn.sokolov.ru/upload/content/area/c19327747dae5dde983d63529c67decb.jpg",
        "https://cdn.sokolov.ru/upload/content/area/59c08bf31bde1c3e7bb1a0c11b4e9412.jpg",
        "https://cdn.sokolov.ru/upload/content/area/f77c187c912eed81b9a940d56f4e733f.jpg",
        "https://cdn.sokolov.ru/upload/content/area/29692ce29bea0ed9fc48a32b78e96577.jpg",
        "https://cdn.sokolov.ru/upload/content/area/7b737af32bfdf0a9756be23dad1122fa.jpg",
        "https://cdn.sokolov.ru/upload/content/area/4a175e582f4323dd74687852cf297369.jpg",
    };
}

<div class="promotion-container">
    <h2>Промо-акции</h2>
    <div class="promotion-carousel">
        @foreach (var url in imageUrls)
        {
            <div class="promotion-item">
                <img src="@url" alt="Promotion Image" class="promotion-image" />
            </div>
        }
        @foreach (var url in imageUrls) // Дублирование изображений для цикличности
        {
            <div class="promotion-item">
                <img src="@url" alt="Promotion Image" class="promotion-image" />
            </div>
        }
    </div>
</div>

<style>
    .promotion-container {
        text-align: center;
        overflow: hidden; /* Скрывает часть, выходящую за границы */
        width: 100%;
        position: relative;
    }

    .promotion-carousel {
        display: flex;
        transition: transform 0.5s ease; /* Плавный переход при прокрутке */
        width: max-content; /* Ширина по содержимому */
    }

    .promotion-item {
        border-radius: 8px; /* Измените радиус, если хотите, чтобы углы были менее округлыми */
        width: 150px; /* Устанавливаем ширину на 150px */
        height: 200px; /* Устанавливаем высоту на 200px */
        margin: 0 10px; /* Отступы между элементами */
        overflow: hidden; /* Скрывает часть изображения, выходящую за границы */
        display: flex; /* Позволяет выровнять содержимое */
        align-items: center; /* Центрируем содержимое по вертикали */
        justify-content: center; /* Центрируем содержимое по горизонтали */
    }

    .promotion-image {
        width: 100%; /* Устанавливаем ширину изображения на 100% */
        height: 100%; /* Устанавливаем высоту изображения на 100% */
        object-fit: cover; /* Обеспечиваем правильное отображение изображения */
        border-radius: 8px; /* Радиус границ для соответствия стилю блока */
    }

</style>

<script>
    const carousel = document.querySelector('.promotion-carousel');
    const items = document.querySelectorAll('.promotion-item');
    let index = 0;

    function scrollCarousel() {
        index++;
        if (index >= items.length) {
            index = 0; // Вернуться к первому изображению
        }
        const translateX = -index * (items[0].clientWidth + 20); // 20 - это отступ между элементами
        carousel.style.transform = `translateX(${translateX}px)`;
    }

    // Запуск прокрутки
    setInterval(scrollCarousel, 3000); // Прокрутка каждые 3 секунды

    // Добавление дубликатов в конце для бесконечной прокрутки
    const cloneFirstItem = items[0].cloneNode(true);
    carousel.appendChild(cloneFirstItem);
</script>





@model ProductsViewModel
<div style="flex: 5; padding: 20px;">
    <h1>Лучшая цена</h1>
    <div class="product-container">
        @if (Model.BestSellers != null && Model.BestSellers.Any())
        {
            foreach (var product in Model.BestSellers)
            {
                <a href="@Url.Action("ClientproductDetelisPage", "Client", new { id = product.Id, userId = ViewData["User Id"] })" style="text-decoration: none; color: inherit;">
                    <div class="product-card">
                        @if (!string.IsNullOrEmpty(product.PhotoUrl))
                        {
                            <img src="@product.PhotoUrl" alt="@product.Title" class="product-image" />
                        }
                        <div style="margin-top: 10px;">
                            @if (product.Discount > 0 && product.Price.HasValue && product.PriceDiscounr.HasValue)
                            {
                                <div>
                                    <span style="text-decoration: line-through; font-size: 14px;">
                                        @(product.Price.HasValue ? product.Price.Value.ToString("C") : "Цена не указана")
                                    </span>
                                    <span style="color: red; margin-left: 10px; font-size: 14px;">-@product.Discount%</span>
                                </div>
                                <div>
                                    <span style="font-size: 18px; font-weight: bold;">
                                        @(product.PriceDiscounr.HasValue ? product.PriceDiscounr.Value.ToString("C") : "Цена не указана")
                                    </span>
                                </div>
                            }
                            else if (product.Price.HasValue)
                            {
                                <span>@(product.Price.Value.ToString("C"))</span>
                            }
                            else
                            {
                                <span>Цена не указана</span>
                            }
                        </div>

                        <h3 class="product-title">@product.Title</h3>
                    </div>
                </a>
            }
        }
        else
        {
            <p>Товары не найдены.</p>
        }
    </div>
</div>



<script>
           const items = document.querySelectorAll('.banner-item');
    const leftArrow = document.querySelector('.left-arrow');
    const rightArrow = document.querySelector('.right-arrow');
    let currentIndex = 0;

    // Функция для отображения текущего элемента
    function showItem(index) {
        items.forEach((item, i) => {
            item.classList.remove('active'); // Убираем активный класс у всех элементов
        });
        items[index].classList.add('active'); // Добавляем активный класс только к текущему элементу
    }

    // Функции для переключения изображений
    function showNextItem() {
        currentIndex = (currentIndex + 1) % items.length; // Переход к следующему элементу
        showItem(currentIndex);
    }

    function showPrevItem() {
        currentIndex = (currentIndex - 1 + items.length) % items.length; // Переход к предыдущему элементу
        showItem(currentIndex);
    }

    // Меняем картинку каждые 4 секунды
    const intervalId = setInterval(showNextItem, 4000);

    // Обработчики событий для стрелок
    leftArrow.addEventListener('click', () => {
        clearInterval(intervalId); // Останавливаем автоматическую смену
        showPrevItem();
    });

    rightArrow.addEventListener('click', () => {
        clearInterval(intervalId); // Останавливаем автоматическую смену
        showNextItem();
    });

    // Инициализация первого изображения
    showItem(currentIndex);

</script>





<div style="flex: 5; padding: 20px;">
    <h1>Новинки</h1>
    <div class="product-container">
        @if (Model.NewArrivals != null && Model.NewArrivals.Any())
        {
            foreach (var product in Model.NewArrivals)
            {
                <a href="@Url.Action("ClientproductDetelisPage", "Client", new { id = product.Id, userId = ViewData["User Id"] })" style="text-decoration: none; color: inherit;">
                    <div class="product-card">
                        @if (!string.IsNullOrEmpty(product.PhotoUrl))
                        {
                            <img src="@product.PhotoUrl" alt="@product.Title" class="product-image" />
                        }
                        <div style="margin-top: 10px;">
                            @if (product.Discount > 0 && product.Price.HasValue && product.PriceDiscounr.HasValue)
                            {
                                <div>
                                    <span style="text-decoration: line-through; font-size: 14px;">
                                        @(product.Price.HasValue ? product.Price.Value.ToString("C") : "Цена не указана")
                                    </span>
                                    <span style="color: red; margin-left: 10px; font-size: 14px;">-@product.Discount%</span>
                                </div>
                                <div>
                                    <span style="font-size: 18px; font-weight: bold;">
                                        @(product.PriceDiscounr.HasValue ? product.PriceDiscounr.Value.ToString("C") : "Цена не указана")
                                    </span>
                                </div>
                            }
                            else if (product.Price.HasValue)
                            {
                                <span>@(product.Price.Value.ToString("C"))</span>
                            }
                            else
                            {
                                <span>Цена не указана</span>
                            }
                        </div>

                        <h3 class="product-title">@product.Title</h3>
                    </div>
                </a>
            }
        }
        else
        {
            <p>Товары не найдены.</p>
        }
    </div>
</div>



